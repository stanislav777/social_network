[{"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx":"1","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts":"2","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx":"3","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx":"5","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx":"6","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx":"9","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"10","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx":"11","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx":"12","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx":"13","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx":"14","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx":"15","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx":"16","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx":"17","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx":"20","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx":"21","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersAPIComponent.tsx":"22","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx":"23","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx":"24","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\ProfileContainer.jsx":"25","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\auth-reducer.tsx":"26","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\HeaderContainer.tsx":"27","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\api\\API.tsx":"28"},{"size":518,"mtime":1615306149096,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":893,"mtime":1620506474108,"results":"32","hashOfConfig":"30"},{"size":1023,"mtime":1616523312608,"results":"33","hashOfConfig":"30"},{"size":593,"mtime":1619552215299,"results":"34","hashOfConfig":"30"},{"size":487,"mtime":1616576241576,"results":"35","hashOfConfig":"30"},{"size":1446,"mtime":1619473375331,"results":"36","hashOfConfig":"30"},{"size":664,"mtime":1612434727378,"results":"37","hashOfConfig":"30"},{"size":1556,"mtime":1614776529096,"results":"38","hashOfConfig":"30"},{"size":749,"mtime":1619471347031,"results":"39","hashOfConfig":"30"},{"size":293,"mtime":1611169271346,"results":"40","hashOfConfig":"30"},{"size":293,"mtime":1612532530797,"results":"41","hashOfConfig":"30"},{"size":423,"mtime":1611248376614,"results":"42","hashOfConfig":"30"},{"size":3257,"mtime":1616575988826,"results":"43","hashOfConfig":"30"},{"size":2745,"mtime":1623763024304,"results":"44","hashOfConfig":"30"},{"size":1417,"mtime":1616575538445,"results":"45","hashOfConfig":"30"},{"size":662,"mtime":1623761546738,"results":"46","hashOfConfig":"30"},{"size":1847,"mtime":1616576084596,"results":"47","hashOfConfig":"30"},{"size":1612,"mtime":1616575618923,"results":"48","hashOfConfig":"30"},{"size":4045,"mtime":1623761205035,"results":"49","hashOfConfig":"30"},{"size":4809,"mtime":1623761205007,"results":"50","hashOfConfig":"30"},{"size":2643,"mtime":1623760254456,"results":"51","hashOfConfig":"30"},{"size":2314,"mtime":1623761205044,"results":"52","hashOfConfig":"30"},{"size":203,"mtime":1616502473075,"results":"53","hashOfConfig":"30"},{"size":1038,"mtime":1619474758569,"results":"54","hashOfConfig":"30"},{"size":807,"mtime":1619547412155,"results":"55","hashOfConfig":"30"},{"size":1405,"mtime":1619551988412,"results":"56","hashOfConfig":"30"},{"size":1275,"mtime":1623761366468,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"x2e4hj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx",[],["124","125"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts",[],["126","127"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx",["128"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nexport type HeaderPropsType = {\r\n    isAuth: boolean,\r\n    login: string\r\n}\r\n\r\nconst Header = (props:HeaderPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.logodesign.net/images/illustration-logo.png'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login\r\n                : <NavLink to={'/login'}> Login </NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["129","130"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../Ð¡ommon/Preloader/Preloader';\r\nimport {ProfileType} from '../../../../redux/profile-reducer';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile){\r\n     return  <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <img src='https://www.artd.ru/wp-content/uploads/2018/12/stydiya-tpl_01-01.jpg'/>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.small}/>\r\n                ava + description\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx",["131"],"import dialogsReducer from './dialogs-rerducer';\r\nimport profileReducer from './profile-reducer';\r\n\r\nexport type DialogPropsType =\r\n    {\r\n        id: number\r\n        name: string\r\n    }\r\n\r\nexport type MessagePropsType =\r\n    {\r\n        id: number\r\n        message: string\r\n    }\r\n\r\n\r\nexport type PostPropsType =\r\n    {\r\n        id: number\r\n        message: string\r\n        likesCounts: number\r\n    }\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n    profile: null | ProfileType\r\n    }\r\n\r\nexport type MessagesPageType = {\r\n    dialogs: Array<DialogPropsType>\r\n    messages: Array<MessagePropsType>\r\n    newMessageText: string\r\n}\r\n// export type usersPageType = {\r\n//     users: Array<userType>\r\n// }\r\nexport type UserType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type  ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: object\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type rootStateType = {\r\n    profilePage: ProfilePageType,\r\n    dialogsPage: MessagesPageType,\r\n\r\n}\r\n\r\n\r\ntype  StoreType = {\r\n    _state: rootStateType\r\n    getState: () => rootStateType\r\n    subscriber: any\r\n    dispatch: (action: any) => void\r\n    _callSubscriber: (state: rootStateType) => void\r\n}\r\n\r\n\r\nlet store: StoreType = {\r\n\r\n    _state: /*rootStateType*/ {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hello. How are you', likesCounts: 2184},\r\n                {id: 2, message: 'Yo. I am busy now.', likesCounts: 45},\r\n                {id: 3, message: 'Hello. i am your friend', likesCounts: 56},\r\n            ],\r\n            newPostText: '',\r\n           profile: null\r\n\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Stanislav'},\r\n                {id: 2, name: 'Egor'},\r\n                {id: 3, name: 'Misha'},\r\n                {id: 5, name: 'Roma'},\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hi. How are you'},\r\n                {id: 2, message: 'All right'},\r\n                {id: 3, message: 'Good day'},\r\n                {id: 4, message: 'Hi. How are you'},\r\n            ],\r\n            newMessageText: ''\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscriber(callback: any) {\r\n        this._callSubscriber = callback;\r\n    },\r\n    _callSubscriber(state: rootStateType) {\r\n        console.log('state changed')\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n        // this._state.dialogsPage = sidebarReducer( this._state.dialogsPage, action )\r\n\r\n        this._callSubscriber(this._state);\r\n\r\n    }\r\n}\r\n\r\nexport default store;",["132","133"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx",["134"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["135"],"import React from 'react';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {RootReduxState} from '../../../redux/redax-store';\r\nimport {addPostAC, PostPropsType, updateNewPostTextAC} from '../../../redux/profile-reducer';\r\n\r\n\r\n// type MyPostsContainerPropsType = {\r\n//     store: StoreType\r\n// }\r\n//\r\n// export const MyPostsContainer = (props: MyPostsContainerPropsType) => {\r\n//\r\n//     let state = props.store.getState();\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//\r\n//     let onPostChange = (postText: string) => {\r\n//         let action = updateNewPostTextActionCreator(postText);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  posts={state.profilePage.posts}\r\n//                  newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     )\r\n// }\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState ): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (postText: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText: (postText) => {\r\n            let action = updateNewPostTextAC(postText);\r\n            dispatch(action)\r\n        },\r\n\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["136"],"import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {RootReduxState} from \"../../redux/redax-store\";\r\nimport {InitialDialogsState, sendMessageCreator, updateNewMessageTextCreator} from '../../redux/dialogs-rerducer';\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type  DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n// const DialogsContainer = (props: DialogsPropsType) => {\r\n//\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.sendMessage()\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body: string) => {\r\n//        props.updateNewMessageBody(body)\r\n//     }\r\n//\r\n//\r\n//     return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                     sendMessage={onSendMessageClick}\r\n//                     dialogsPage={props.dialogsPage}/>\r\n// }\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialDialogsState\r\n}\r\n\r\nexport let mapStateToProps = (state: RootReduxState): MapStateToPropsType =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nexport let  mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType  => {\r\n    return {\r\n        updateNewMessageBody: (body: string) =>{\r\n            dispatch(updateNewMessageTextCreator(body))\r\n        },\r\n        sendMessage: () => {dispatch (sendMessageCreator())}\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx",["137"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersAPIComponent.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx",["138"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx",["139"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/1488.gif\";\r\n\r\n\r\nlet Preloder = (props) => {\r\n   return <div>\r\n    <img src={preloader}/>\r\n   </div>\r\n};\r\nexport default Preloder;",["140","141"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\ProfileContainer.jsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\auth-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\HeaderContainer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\api\\API.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":13,"column":13,"nodeType":"150","endLine":13,"endColumn":81},{"ruleId":"148","severity":1,"message":"149","line":19,"column":13,"nodeType":"150","endLine":19,"endColumn":94},{"ruleId":"148","severity":1,"message":"149","line":21,"column":17,"nodeType":"150","endLine":21,"endColumn":56},{"ruleId":"151","severity":1,"message":"152","line":6,"column":5,"nodeType":"153","messageId":"154","endLine":6,"endColumn":18},{"ruleId":"142","replacedBy":"155"},{"ruleId":"144","replacedBy":"156"},{"ruleId":"151","severity":1,"message":"157","line":6,"column":9,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"158","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"158","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":47,"column":25,"nodeType":"161","messageId":"162","endLine":47,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":44,"column":20,"nodeType":"150","endLine":44,"endColumn":119},{"ruleId":"148","severity":1,"message":"149","line":7,"column":5,"nodeType":"150","endLine":7,"endColumn":27},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],["163"],["164"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'setTotalCount' is defined but never used.","Identifier","unusedVar",["163"],["164"],"'thunkMiddleware' is defined but never used.","'React' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]