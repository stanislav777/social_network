[{"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx":"1","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts":"2","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx":"3","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx":"5","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx":"6","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx":"9","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"10","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx":"11","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx":"12","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx":"13","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx":"14","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx":"15","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx":"16","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx":"17","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.jsx":"20","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.jsx":"21","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx":"22"},{"size":518,"mtime":1615306149096,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":828,"mtime":1615580703338,"results":"26","hashOfConfig":"24"},{"size":890,"mtime":1610561140899,"results":"27","hashOfConfig":"24"},{"size":294,"mtime":1610529711638,"results":"28","hashOfConfig":"24"},{"size":367,"mtime":1615294819137,"results":"29","hashOfConfig":"24"},{"size":1436,"mtime":1615205145836,"results":"30","hashOfConfig":"24"},{"size":664,"mtime":1612434727378,"results":"31","hashOfConfig":"24"},{"size":1556,"mtime":1614776529096,"results":"32","hashOfConfig":"24"},{"size":473,"mtime":1611089505525,"results":"33","hashOfConfig":"24"},{"size":293,"mtime":1611169271346,"results":"34","hashOfConfig":"24"},{"size":293,"mtime":1612532530797,"results":"35","hashOfConfig":"24"},{"size":423,"mtime":1611248376614,"results":"36","hashOfConfig":"24"},{"size":3749,"mtime":1615659729071,"results":"37","hashOfConfig":"24"},{"size":1272,"mtime":1615309260755,"results":"38","hashOfConfig":"24"},{"size":1310,"mtime":1615650905845,"results":"39","hashOfConfig":"24"},{"size":496,"mtime":1615659189880,"results":"40","hashOfConfig":"24"},{"size":1954,"mtime":1615302961906,"results":"41","hashOfConfig":"24"},{"size":1647,"mtime":1615376655188,"results":"42","hashOfConfig":"24"},{"size":143,"mtime":1615314115035,"results":"43","hashOfConfig":"24"},{"size":1039,"mtime":1615659615040,"results":"44","hashOfConfig":"24"},{"size":1611,"mtime":1615659022961,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"x2e4hj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx",[],["100","101"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts",[],["102","103"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx",["104"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src='https://www.logodesign.net/images/illustration-logo.png'/>\r\n    </header>\r\n}\r\nexport default Header","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx",["105"],"import React from 'react';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport store from '../../redux/state';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["106"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {ActionsTypes,PostPropsType} from \"../../../redux/state\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostPropsType>\r\n    /*dispatch: (action: ActionsTypes) => void*/\r\n    newPostText: string\r\n    addPost: () => void\r\n    updateNewPostText: (postText: string) => void\r\n}\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let post = props.posts.map((p) => <Post id={p.id} message={p.message} likesCounts={p.likesCounts}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n    let onAddPost = () => {\r\n        if (newPostElement.current) {\r\n            props.addPost();\r\n        }\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let postText = newPostElement.current.value;\r\n            props.updateNewPostText(postText)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3> My posts </h3>\r\n            </div>\r\n            <div>\r\n                <textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}> </textarea>\r\n                <div>\r\n                    <button onClick={onAddPost}>add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["107"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\ntype ProfileInfoPropsType = {}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <img src='https://www.artd.ru/wp-content/uploads/2018/12/stydiya-tpl_01-01.jpg'/>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["108"],"import React from 'react';\r\nimport {addPostActionCreator, PostPropsType, updateNewPostTextActionCreator} from '../../../redux/state';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {InitialProfileState} from '../../../redux/profile-reducer';\r\nimport {Dispatch} from 'redux';\r\nimport {RootReduxState} from '../../../redux/redax-store';\r\n\r\n\r\n// type MyPostsContainerPropsType = {\r\n//     store: StoreType\r\n// }\r\n//\r\n// export const MyPostsContainer = (props: MyPostsContainerPropsType) => {\r\n//\r\n//     let state = props.store.getState();\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//\r\n//     let onPostChange = (postText: string) => {\r\n//         let action = updateNewPostTextActionCreator(postText);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  posts={state.profilePage.posts}\r\n//                  newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     )\r\n// }\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState ): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (postText: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText: (postText) => {\r\n            let action = updateNewPostTextActionCreator(postText);\r\n            dispatch(action)\r\n        },\r\n\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["109"],"import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageTextCreator} from '../../redux/state';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {RootReduxState} from \"../../redux/redax-store\";\r\nimport {InitialDialogsState} from \"../../redux/dialogs-rerducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type  DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n// const DialogsContainer = (props: DialogsPropsType) => {\r\n//\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.sendMessage()\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body: string) => {\r\n//        props.updateNewMessageBody(body)\r\n//     }\r\n//\r\n//\r\n//     return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                     sendMessage={onSendMessageClick}\r\n//                     dialogsPage={props.dialogsPage}/>\r\n// }\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialDialogsState\r\n}\r\n\r\nexport let mapStateToProps = (state: RootReduxState): MapStateToPropsType =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nexport let  mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType  => {\r\n    return {\r\n        updateNewMessageBody: (body: string) =>{\r\n            dispatch(updateNewMessageTextCreator(body))\r\n        },\r\n        sendMessage: () => {dispatch (sendMessageCreator())}\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.jsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.jsx",["110"],"import React from \"react\";\r\nimport {followAC, InitialUserState, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {RootReduxState} from \"../../redux/redax-store\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToProps = {\r\n  users: InitialUserState\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState): MapStateToProps => {\r\n    return {\r\n     users: state.usersPage.users\r\n    }\r\n}\r\n\r\n\r\ntype MapDispatchToPropsType = {\r\n    followAC: (userId: string) => void\r\n    unfollowAC: (userId: string) => void\r\n    setUsersAC: (users) => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return{\r\n     follow: (userId) => {\r\n         dispatch(followAC(userId))\r\n     },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);",["111","112"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":9,"nodeType":"121","endLine":7,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"126","line":4,"column":9,"nodeType":"124","messageId":"125","endLine":4,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":10,"column":13,"nodeType":"121","endLine":10,"endColumn":94},{"ruleId":"122","severity":1,"message":"127","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"127","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"128","line":21,"column":5},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'ActionsTypes' is defined but never used.","'React' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 19 | \u001b[39mtype \u001b[33mMapDispatchToPropsType\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    followAC\u001b[33m:\u001b[39m (userId\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 | \u001b[39m    unfollowAC\u001b[33m:\u001b[39m (userId\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m    setUsersAC\u001b[33m:\u001b[39m (users) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]