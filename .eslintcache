[{"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx":"1","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts":"2","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx":"3","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx":"5","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx":"6","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx":"9","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"10","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx":"11","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx":"12","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx":"13","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx":"14","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx":"15","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx":"16","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx":"17","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx":"20","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx":"21","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx":"22","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx":"23","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\ProfileContainer.jsx":"24","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\auth-reducer.tsx":"25","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\HeaderContainer.tsx":"26","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\api\\API.tsx":"27","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Login\\Login.tsx":"28","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\hoc\\withAuthRedirect.tsx":"29","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx":"30"},{"size":518,"mtime":1615306149096,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1013,"mtime":1623843320182,"results":"34","hashOfConfig":"32"},{"size":1023,"mtime":1616523312608,"results":"35","hashOfConfig":"32"},{"size":593,"mtime":1619552215299,"results":"36","hashOfConfig":"32"},{"size":502,"mtime":1625238264172,"results":"37","hashOfConfig":"32"},{"size":1446,"mtime":1619473375331,"results":"38","hashOfConfig":"32"},{"size":664,"mtime":1612434727378,"results":"39","hashOfConfig":"32"},{"size":1932,"mtime":1625238264003,"results":"40","hashOfConfig":"32"},{"size":894,"mtime":1625256175770,"results":"41","hashOfConfig":"32"},{"size":293,"mtime":1611169271346,"results":"42","hashOfConfig":"32"},{"size":293,"mtime":1612532530797,"results":"43","hashOfConfig":"32"},{"size":423,"mtime":1611248376614,"results":"44","hashOfConfig":"32"},{"size":3257,"mtime":1616575988826,"results":"45","hashOfConfig":"32"},{"size":2597,"mtime":1623838501625,"results":"46","hashOfConfig":"32"},{"size":1417,"mtime":1616575538445,"results":"47","hashOfConfig":"32"},{"size":677,"mtime":1623774628054,"results":"48","hashOfConfig":"32"},{"size":1847,"mtime":1616576084596,"results":"49","hashOfConfig":"32"},{"size":1485,"mtime":1625254312869,"results":"50","hashOfConfig":"32"},{"size":3274,"mtime":1625252624765,"results":"51","hashOfConfig":"32"},{"size":5063,"mtime":1623829689549,"results":"52","hashOfConfig":"32"},{"size":2344,"mtime":1625072120390,"results":"53","hashOfConfig":"32"},{"size":203,"mtime":1616502473075,"results":"54","hashOfConfig":"32"},{"size":1234,"mtime":1625255837688,"results":"55","hashOfConfig":"32"},{"size":1228,"mtime":1623839671426,"results":"56","hashOfConfig":"32"},{"size":975,"mtime":1623840387386,"results":"57","hashOfConfig":"32"},{"size":831,"mtime":1623834836105,"results":"58","hashOfConfig":"32"},{"size":104,"mtime":1623878568502,"results":"59","hashOfConfig":"32"},{"size":797,"mtime":1625234111391,"results":"60","hashOfConfig":"32"},{"size":903,"mtime":1625265882166,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"x2e4hj",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx",[],["130","131"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts",[],["132","133"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx",["134"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nexport type HeaderPropsType = {\r\n    isAuth: boolean,\r\n    login: string\r\n}\r\n\r\nconst Header = (props:HeaderPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.logodesign.net/images/illustration-logo.png'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login\r\n                : <NavLink to={'/login'}> Login </NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["135","136"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx",["137"],"import dialogsReducer from './dialogs-rerducer';\r\nimport profileReducer from './profile-reducer';\r\n\r\nexport type DialogPropsType =\r\n    {\r\n        id: number\r\n        name: string\r\n    }\r\n\r\nexport type MessagePropsType =\r\n    {\r\n        id: number\r\n        message: string\r\n    }\r\n\r\n\r\nexport type PostPropsType =\r\n    {\r\n        id: number\r\n        message: string\r\n        likesCounts: number\r\n    }\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n    profile: null | ProfileType\r\n    }\r\n\r\nexport type MessagesPageType = {\r\n    dialogs: Array<DialogPropsType>\r\n    messages: Array<MessagePropsType>\r\n    newMessageText: string\r\n}\r\n// export type usersPageType = {\r\n//     users: Array<userType>\r\n// }\r\nexport type UserType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type  ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: object\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type rootStateType = {\r\n    profilePage: ProfilePageType,\r\n    dialogsPage: MessagesPageType,\r\n\r\n}\r\n\r\n\r\ntype  StoreType = {\r\n    _state: rootStateType\r\n    getState: () => rootStateType\r\n    subscriber: any\r\n    dispatch: (action: any) => void\r\n    _callSubscriber: (state: rootStateType) => void\r\n}\r\n\r\n\r\nlet store: StoreType = {\r\n\r\n    _state: /*rootStateType*/ {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hello. How are you', likesCounts: 2184},\r\n                {id: 2, message: 'Yo. I am busy now.', likesCounts: 45},\r\n                {id: 3, message: 'Hello. i am your friend', likesCounts: 56},\r\n            ],\r\n            newPostText: '',\r\n           profile: null\r\n\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Stanislav'},\r\n                {id: 2, name: 'Egor'},\r\n                {id: 3, name: 'Misha'},\r\n                {id: 5, name: 'Roma'},\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hi. How are you'},\r\n                {id: 2, message: 'All right'},\r\n                {id: 3, message: 'Good day'},\r\n                {id: 4, message: 'Hi. How are you'},\r\n            ],\r\n            newMessageText: ''\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscriber(callback: any) {\r\n        this._callSubscriber = callback;\r\n    },\r\n    _callSubscriber(state: rootStateType) {\r\n        console.log('state changed')\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n        // this._state.dialogsPage = sidebarReducer( this._state.dialogsPage, action )\r\n\r\n        this._callSubscriber(this._state);\r\n\r\n    }\r\n}\r\n\r\nexport default store;",["138","139"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["140"],"import React from 'react';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {RootReduxState} from '../../../redux/redax-store';\r\nimport {addPostAC, PostPropsType, updateNewPostTextAC} from '../../../redux/profile-reducer';\r\n\r\n\r\n// type MyPostsContainerPropsType = {\r\n//     store: StoreType\r\n// }\r\n//\r\n// export const MyPostsContainer = (props: MyPostsContainerPropsType) => {\r\n//\r\n//     let state = props.store.getState();\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//\r\n//     let onPostChange = (postText: string) => {\r\n//         let action = updateNewPostTextActionCreator(postText);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  posts={state.profilePage.posts}\r\n//                  newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     )\r\n// }\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState ): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (postText: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText: (postText) => {\r\n            let action = updateNewPostTextAC(postText);\r\n            dispatch(action)\r\n        },\r\n\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["141"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx",["142"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/1488.gif\";\r\n\r\n\r\nlet Preloder = (props) => {\r\n   return <div>\r\n    <img src={preloader}/>\r\n   </div>\r\n};\r\nexport default Preloder;",["143","144"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\ProfileContainer.jsx",["145","146"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\auth-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\HeaderContainer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\api\\API.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Login\\Login.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\hoc\\withAuthRedirect.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx",["147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"150","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":13,"column":13,"nodeType":"156","endLine":13,"endColumn":81},{"ruleId":"154","severity":1,"message":"155","line":20,"column":13,"nodeType":"156","endLine":20,"endColumn":107},{"ruleId":"154","severity":1,"message":"155","line":22,"column":17,"nodeType":"156","endLine":22,"endColumn":82},{"ruleId":"157","severity":1,"message":"158","line":6,"column":5,"nodeType":"159","messageId":"160","endLine":6,"endColumn":18},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","replacedBy":"162"},{"ruleId":"157","severity":1,"message":"163","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"163","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":7,"column":5,"nodeType":"156","endLine":7,"endColumn":27},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":29},{"ruleId":"164","severity":1,"message":"166","line":6,"column":9,"nodeType":"159","messageId":"160","endLine":6,"endColumn":16},{"ruleId":"157","severity":1,"message":"167","line":9,"column":6,"nodeType":"159","messageId":"160","endLine":9,"endColumn":15},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],["168"],["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'setTotalCount' is defined but never used.","Identifier","unusedVar",["168"],["169"],"'React' is defined but never used.","no-unused-vars","'ComponentType' is defined but never used.","'compose' is defined but never used.","'StateType' is defined but never used.","no-global-assign","no-unsafe-negation"]