[{"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx":"1","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts":"2","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx":"3","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx":"5","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx":"6","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx":"9","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"10","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx":"11","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx":"12","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx":"13","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx":"14","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx":"15","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx":"16","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx":"17","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx":"20","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx":"21","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersAPIComponent.tsx":"22","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx":"23","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx":"24"},{"size":518,"mtime":1615306149096,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":829,"mtime":1615829538095,"results":"28","hashOfConfig":"26"},{"size":890,"mtime":1610561140899,"results":"29","hashOfConfig":"26"},{"size":294,"mtime":1610529711638,"results":"30","hashOfConfig":"26"},{"size":367,"mtime":1615294819137,"results":"31","hashOfConfig":"26"},{"size":1436,"mtime":1615205145836,"results":"32","hashOfConfig":"26"},{"size":664,"mtime":1612434727378,"results":"33","hashOfConfig":"26"},{"size":1556,"mtime":1614776529096,"results":"34","hashOfConfig":"26"},{"size":473,"mtime":1611089505525,"results":"35","hashOfConfig":"26"},{"size":293,"mtime":1611169271346,"results":"36","hashOfConfig":"26"},{"size":293,"mtime":1612532530797,"results":"37","hashOfConfig":"26"},{"size":423,"mtime":1611248376614,"results":"38","hashOfConfig":"26"},{"size":3933,"mtime":1616451388556,"results":"39","hashOfConfig":"26"},{"size":1272,"mtime":1615309260755,"results":"40","hashOfConfig":"26"},{"size":1312,"mtime":1615903672672,"results":"41","hashOfConfig":"26"},{"size":496,"mtime":1615659189880,"results":"42","hashOfConfig":"26"},{"size":1954,"mtime":1615302961906,"results":"43","hashOfConfig":"26"},{"size":1647,"mtime":1615376655188,"results":"44","hashOfConfig":"26"},{"size":2380,"mtime":1616517822340,"results":"45","hashOfConfig":"26"},{"size":2877,"mtime":1616501006580,"results":"46","hashOfConfig":"26"},{"size":2132,"mtime":1616502171233,"results":"47","hashOfConfig":"26"},{"size":1870,"mtime":1616502335824,"results":"48","hashOfConfig":"26"},{"size":203,"mtime":1616502473075,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"x2e4hj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\index.tsx",[],["108","109"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\reportWebVitals.ts",[],["110","111"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\App.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Heder\\Header.tsx",["112"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src='https://www.logodesign.net/images/illustration-logo.png'/>\r\n    </header>\r\n}\r\nexport default Header","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\Profile.tsx",["113"],"import React from 'react';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport store from '../../redux/state';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["114"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {ActionsTypes,PostPropsType} from \"../../../redux/state\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostPropsType>\r\n    /*dispatch: (action: ActionsTypes) => void*/\r\n    newPostText: string\r\n    addPost: () => void\r\n    updateNewPostText: (postText: string) => void\r\n}\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let post = props.posts.map((p) => <Post id={p.id} message={p.message} likesCounts={p.likesCounts}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n    let onAddPost = () => {\r\n        if (newPostElement.current) {\r\n            props.addPost();\r\n        }\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let postText = newPostElement.current.value;\r\n            props.updateNewPostText(postText)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3> My posts </h3>\r\n            </div>\r\n            <div>\r\n                <textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}> </textarea>\r\n                <div>\r\n                    <button onClick={onAddPost}>add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["115"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\ntype ProfileInfoPropsType = {}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <img src='https://www.artd.ru/wp-content/uploads/2018/12/stydiya-tpl_01-01.jpg'/>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\Message\\message.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogItem\\dialogItem.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\state.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\profile-reducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\dialogs-rerducer.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\redax-store.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["116"],"import React from 'react';\r\nimport {addPostActionCreator, PostPropsType, updateNewPostTextActionCreator} from '../../../redux/state';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {InitialProfileState} from '../../../redux/profile-reducer';\r\nimport {Dispatch} from 'redux';\r\nimport {RootReduxState} from '../../../redux/redax-store';\r\n\r\n\r\n// type MyPostsContainerPropsType = {\r\n//     store: StoreType\r\n// }\r\n//\r\n// export const MyPostsContainer = (props: MyPostsContainerPropsType) => {\r\n//\r\n//     let state = props.store.getState();\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//\r\n//     let onPostChange = (postText: string) => {\r\n//         let action = updateNewPostTextActionCreator(postText);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  posts={state.profilePage.posts}\r\n//                  newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     )\r\n// }\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState ): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (postText: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText: (postText) => {\r\n            let action = updateNewPostTextActionCreator(postText);\r\n            dispatch(action)\r\n        },\r\n\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["117"],"import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageTextCreator} from '../../redux/state';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {RootReduxState} from \"../../redux/redax-store\";\r\nimport {InitialDialogsState} from \"../../redux/dialogs-rerducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type  DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n// const DialogsContainer = (props: DialogsPropsType) => {\r\n//\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.sendMessage()\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body: string) => {\r\n//        props.updateNewMessageBody(body)\r\n//     }\r\n//\r\n//\r\n//     return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                     sendMessage={onSendMessageClick}\r\n//                     dialogsPage={props.dialogsPage}/>\r\n// }\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialDialogsState\r\n}\r\n\r\nexport let mapStateToProps = (state: RootReduxState): MapStateToPropsType =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nexport let  mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType  => {\r\n    return {\r\n        updateNewMessageBody: (body: string) =>{\r\n            dispatch(updateNewMessageTextCreator(body))\r\n        },\r\n        sendMessage: () => {dispatch (sendMessageCreator())}\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersContainer.tsx",["118","119"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\redux\\users-reducer.tsx",["120"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\UsersAPIComponent.tsx",[],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Users\\Users.tsx",["121"],"F:\\WEB\\2020\\Kamasutra\\Projects\\wayOfTheSamurai\\react-1\\src\\components\\Ð¡ommon\\Preloader\\Preloader.jsx",["122"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/1488.gif\";\r\n\r\n\r\nlet Preloder = (props) => {\r\n   return <div>\r\n    <img src={preloader}/>\r\n   </div>\r\n};\r\nexport default Preloder;",["123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":9,"nodeType":"133","endLine":7,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"134","severity":1,"message":"138","line":4,"column":9,"nodeType":"136","messageId":"137","endLine":4,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":10,"column":13,"nodeType":"133","endLine":10,"endColumn":94},{"ruleId":"134","severity":1,"message":"139","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"139","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"139","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":10,"column":9,"nodeType":"136","messageId":"137","endLine":10,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":43,"column":25,"nodeType":"143","messageId":"144","endLine":43,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":38,"column":20,"nodeType":"133","endLine":38,"endColumn":115},{"ruleId":"131","severity":1,"message":"132","line":7,"column":5,"nodeType":"133","endLine":7,"endColumn":27},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'ActionsTypes' is defined but never used.","'React' is defined but never used.","'Dispatch' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]